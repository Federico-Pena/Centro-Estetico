import{k as O,R as A,u as T,r as y,l as S}from"./index-YAdz76Jm.js";import{c as w}from"./compararFechas-sMQnMgQ2.js";import{b as E,f as R,a as C,u as U}from"./useLoaderContext-_SMLR0xo.js";import{u as H}from"./useReservasContext-D-al89pr.js";const I=8,L=7,P=20,$=12,V=30,j=60,b=6,x=0,z=(r,s,t)=>!(r===20&&s===30)&&!(t.getDay()===b&&r===12&&s===30)&&t.getDay()!==x,M=r=>{const s=new Date(r);return Number.isNaN(s.getTime())?[]:(s.setDate(s.getDate()-s.getDay()),Array.from({length:L},(i,o)=>{const e=new Date(s);e.setDate(s.getDate()+o+1);const a=e.getDay()===b?$:P,f=[];for(let l=I;l<=a;l++)for(let n=0;n<j;n+=V)if(z(l,n,e)){const h=new Date(e);h.setHours(l,n,0),f.push(h)}return{dia:e,horas:f}}))},B=async(r,s)=>{const t=new Date(r).getDay(),o=M(r)[t];try{const e=`${E.publicas.reservasDia}${r}`,a={headers:{Authorization:`Bearer ${s||""}`}},f=await R(e,a),{datos:l,error:n}=f;return n?{error:n}:{horas:F(o.horas,l),datos:l}}catch(e){console.log(e)}},F=(r,s)=>r.map(t=>w(t,s)),k=async(r,s)=>{const t=E.reservas.postReserva,i={method:"POST",body:JSON.stringify(s),headers:{Authorization:`Bearer ${r||""}`,"Content-Type":"application/json"}};return await R(t,i)},J=async(r,s,t)=>{const i=`${E.reservas.putReserva}${t}`,o={method:"PUT",headers:{"content-type":"application/json",authorization:`Bearer ${r}`},body:JSON.stringify(s)};return await R(i,o)},Z=async r=>{const s={headers:{"Content-Type":"application/json",Authorization:`Bearer ${r||""}`}},t=E.pacientes.getPacientesNombres;return await R(t,s)},Y=r=>{const s=O(),t=s.pathname===A.admin.agregarReserva,i=s.pathname===A.admin.administracion,{accessToken:o}=C(),{setMensaje:e}=T(),{setLoading:a}=U(),{dispatch:f}=H(),[l,n]=y.useState([]),[h,N]=y.useState([]),[g,_]=y.useState([]);return y.useEffect(()=>{(i||t)&&(async()=>{a(!0);try{const c=await Z(o),{datos:u,status:m,error:p}=c;m===200?N(u):e(p||"Error al obtener los nombres de los pacientes")}catch{e("Error al obtener los nombres de los pacientes")}finally{a(!1)}})()},[o,e,a,t,i]),y.useEffect(()=>{r&&(async()=>{a(!0);try{const c=await B(r,o),{datos:u,horas:m,error:p}=c;p?(e(p),n([])):(n(m),_(u))}catch{e("Error al obtener lar horas disponibles")}finally{a(!1)}})()},[o,e,r,a]),{horasDisponibles:l,reservasDelDia:g,agregarReserva:async d=>{try{a(!0);const c=await k(o,d),{error:u,datos:m,mensaje:p,status:D}=c;return D===200?(e(p),f({type:S.SET_RESERVA_NUEVA,payload:m}),!0):u?(e(u),!1):(e("Ocurrió un error"),!1)}catch{e("Ocurrió un error")}finally{a(!1)}},editarReserva:async(d,c)=>{try{a(!0);const u=await J(o,d,c),{status:m,datos:p,error:D,mensaje:v}=u;return m===200?(e(v),f({type:S.SET_RESERVA_NUEVA,payload:p}),!0):D?(e(D),!1):(e("Error al actualizar la reserva"),!1)}catch{return e("Error al actualizar la reserva"),!1}finally{a(!1)}},pacientesNombres:h}};export{Y as u};
