import{r as f,P as T,m as C,u as m,n as d}from"./index-eyZDGxlY.js";import{f as P,a as y,u as O}from"./useUserContext-o9xrNTqb.js";const $=async(t,r)=>{const e=`${y.pacientes.deletePaciente}${r}`,a={method:"DELETE",headers:{Authorization:`Bearer ${t||""}`}};return await P(e,a)},w=async(t,r)=>{const e=y.pacientes.postPaciente,a={method:"POST",body:r,headers:{Authorization:`Bearer ${t||""}`}};return await P(e,a)},A=async(t,r,e)=>{const a=`${y.pacientes.putPaciente}${e}`,u={method:"PUT",body:r,headers:{Authorization:`Bearer ${t||""}`}};return await P(a,u)},b=async(t,r)=>{const e={headers:{"Content-Type":"application/json",Authorization:`Bearer ${t||""}`}},a=`${y.pacientes.getPacienteId}${r}`;return await P(a,e)},I=()=>{const t=f.useContext(T);if(t===void 0)throw new Error("usePacientes must be used within a PacientesProvider");return t},B=()=>{const{setLoading:t}=C(),{accessToken:r}=O(),{setMensaje:e}=m(),{dispatch:a}=I(),[u,E]=f.useState(1),[g,h]=f.useState(1);return f.useEffect(()=>{(async()=>{try{const s={headers:{"Content-Type":"application/json",Authorization:`Bearer ${r||""}`}};t(!0);const o=`${y.pacientes.getPacientesPaginados}${u}`,n=await P(o,s),{status:c,error:l,datos:p}=n;c===200?(a({type:d.SET_PACIENTES,payload:p.pacientes}),E(p.page),h(p.totalPages)):e(l||"Ocurrió un error el obtener los pacientes")}catch{e("Ocurrió un error el obtener los pacientes")}finally{t(!1)}})()},[a,e,r,u,t]),{borrarPaciente:async i=>{try{t(!0);const s=await $(r,i._id),{status:o,error:n,mensaje:c}=s;o===200?(e(c),a({type:d.DELETE_PACIENTE,payload:i})):e(n||"Ocurrió un error al eliminar el paciente")}catch{e("Ocurrió un error al eliminar el paciente")}finally{t(!1)}},pagina:u,totalPages:g,setPagina:E,agregarPaciente:async i=>{try{t(!0);const s=await w(r,i),{error:o,datos:n,mensaje:c,status:l}=s;return l===200?(e(c),a({type:d.SET_PACIENTE_NUEVO,payload:n}),!0):o?(e(o),!1):(e("Ocurrió un error al guardar el paciente"),!1)}catch{e("Ocurrió un error al guardar el paciente")}finally{t(!1)}},editarPaciente:async(i,s)=>{try{t(!0);const o=await A(r,i,s),{error:n,datos:c,mensaje:l,status:p}=o;return p===200?(e(l),a({type:d.SET_PACIENTE_NUEVO,payload:c}),!0):n?(e(n),!1):(e("Ocurrió un error al guardar el paciente"),!1)}catch{e("Ocurrió un error al guardar el paciente")}finally{t(!1)}},obtenerPacientePorId:async i=>{try{t(!0);const s=await b(r,i),{status:o,error:n,datos:c}=s;if(o===200)return a({type:d.SET_PACIENTE,payload:c}),c;e(n||"Ocurrió un error el obtener los datos del paciente")}catch{e("Ocurrió un error el obtener los datos del paciente")}finally{t(!1)}}}};export{B as a,I as u};
