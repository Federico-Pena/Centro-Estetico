import{o as _,R as v,u as O,m as T,r as D,p as A}from"./index-eyZDGxlY.js";import{c as w}from"./compararFechas-CWI27YET.js";import{a as E,f as R,u as C}from"./useUserContext-o9xrNTqb.js";import{u as U}from"./useReservasContext-7CxyEjNX.js";const H=8,I=7,L=20,P=12,$=30,V=60,S=6,j=0,x=(r,t,a)=>!(r===20&&t===30)&&!(a.getDay()===S&&r===12&&t===30)&&a.getDay()!==j,z=r=>{const t=new Date(r);return Number.isNaN(t.getTime())?[]:(t.setDate(t.getDate()-t.getDay()),Array.from({length:I},(o,e)=>{const s=new Date(t);s.setDate(t.getDate()+e+1);const f=s.getDay()===S?P:L,m=[];for(let n=H;n<=f;n++)for(let i=0;i<V;i+=$)if(x(n,i,s)){const h=new Date(s);h.setHours(n,i,0),m.push(h)}return{dia:s,horas:m}}))},M=async(r,t)=>{const a=new Date(r).getDay(),e=z(r)[a];try{const s=`${E.publicas.reservasDia}${r}`,f={headers:{Authorization:`Bearer ${t||""}`}},m=await R(s,f),{datos:n,error:i}=m;return i?{error:i}:{horas:B(e.horas,n),datos:n}}catch(s){console.log(s)}},B=(r,t)=>r.map(a=>w(a,t)),F=async(r,t)=>{const a=E.reservas.postReserva,o={method:"POST",body:JSON.stringify(t),headers:{Authorization:`Bearer ${r||""}`,"Content-Type":"application/json"}};return await R(a,o)},J=async(r,t,a)=>{const o=`${E.reservas.putReserva}${a}`,e={method:"PUT",headers:{"content-type":"application/json",authorization:`Bearer ${r}`},body:JSON.stringify(t)};return await R(o,e)},k=async r=>{const t={headers:{"Content-Type":"application/json",Authorization:`Bearer ${r||""}`}},a=E.pacientes.getPacientesNombres;return await R(a,t)},X=r=>{const a=_().pathname===v.admin.agregarReserva,{accessToken:o}=C(),{setMensaje:e}=O(),{setLoading:s}=T(),{dispatch:f}=U(),[m,n]=D.useState([]),[i,h]=D.useState([]),[N,b]=D.useState([]);return D.useEffect(()=>{a&&(async()=>{s(!0);try{const c=await k(o),{datos:l,status:p,error:u}=c;p===200?h(l):e(u||"Error al obtener los nombres de los pacientes")}catch{e("Error al obtener los nombres de los pacientes")}finally{s(!1)}})()},[o,e,s,a]),D.useEffect(()=>{r&&(async()=>{s(!0);try{const c=await M(r,o),{datos:l,horas:p,error:u}=c;u?(e(u),n([])):(n(p),b(l))}catch{e("Error al obtener lar horas disponibles")}finally{s(!1)}})()},[o,e,r,s]),{horasDisponibles:m,reservasDelDia:N,agregarReserva:async y=>{try{s(!0);const c=await F(o,y),{error:l,datos:p,mensaje:u,status:d}=c;return d===200?(e(u),f({type:A.SET_RESERVA_NUEVA,payload:p}),!0):l?(e(l),!1):(e("Ocurrió un error"),!1)}catch{e("Ocurrió un error")}finally{s(!1)}},editarReserva:async(y,c)=>{try{s(!0);const l=await J(o,y,c),{status:p,datos:u,error:d,mensaje:g}=l;return p===200?(e(g),f({type:A.SET_RESERVA_NUEVA,payload:u}),!0):d?(e(d),!1):(e("Error al actualizar la reserva"),!1)}catch{return e("Error al actualizar la reserva"),!1}finally{s(!1)}},pacientesNombres:i}};export{X as u};
