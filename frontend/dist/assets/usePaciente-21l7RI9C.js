import{r as f,P as T,u as g,l as d}from"./index-D7SXAQHN.js";import{f as u,a as p,b as m,u as N}from"./useLoaderContext-0fYFxd9T.js";const C=async(t,r)=>{const e=`${p.pacientes.deletePaciente}${r}`,s={method:"DELETE",headers:{Authorization:`Bearer ${t||""}`}};return await u(e,s)},O=async(t,r)=>{const e=p.pacientes.postPaciente,s={method:"POST",body:r,headers:{Authorization:`Bearer ${t||""}`}};return await u(e,s)},$=async(t,r,e)=>{const s=`${p.pacientes.putPaciente}${e}`,l={method:"PUT",body:r,headers:{Authorization:`Bearer ${t||""}`}};return await u(s,l)},A=async(t,r)=>{const e={headers:{"Content-Type":"application/json",Authorization:`Bearer ${t||""}`}},s=`${p.pacientes.getPacienteId}${r}`;return await u(s,e)},w=()=>f.useContext(T),S=async(t,r)=>{const e={headers:{"Content-Type":"application/json",Authorization:`Bearer ${t||""}`}},s=`${p.pacientes.getPacienteNombre}${r}`;return await u(s,e)},I=async(t,r)=>{const e={method:"POST",headers:{Authorization:`Bearer ${t||""}`},body:r},s=p.pacientes.postPdf;return await u(s,e)},_=async t=>{const r={headers:{"Content-Type":"application/json",Authorization:`Bearer ${t||""}`}},e=p.pacientes.getPacientesNombres;return await u(e,r)},R=()=>{const{setLoading:t}=m(),{accessToken:r}=N(),{setMensaje:e}=g(),{dispatch:s}=w(),[l,E]=f.useState(1),[b,h]=f.useState(1);return f.useEffect(()=>{(async()=>{try{const a={headers:{"Content-Type":"application/json",Authorization:`Bearer ${r||""}`}};t(!0);const c=`${p.pacientes.getPacientesPaginados}${l}`,n=await u(c,a),{status:o,error:P,datos:y}=n;o===200?(s({type:d.SET_PACIENTES,payload:y.pacientes}),E(y.page),h(y.totalPages)):e(P||"Ocurrió un error el obtener los pacientes")}catch{e("Ocurrió un error el obtener los pacientes")}finally{t(!1)}})()},[s,e,r,l,t]),f.useEffect(()=>{(async()=>{t(!0);try{const a=await _(r),{datos:c,status:n,error:o}=a;n===200?s({type:d.SET_PACIENTES_NOMBRES,payload:c}):e(o||"Error al obtener los nombres de los pacientes")}catch{e("Error al obtener los nombres de los pacientes")}finally{t(!1)}})()},[s,r,e,t]),{borrarPaciente:async i=>{try{t(!0);const a=await C(r,i._id),{status:c,error:n,mensaje:o}=a;c===200?(e(o),s({type:d.DELETE_PACIENTE,payload:i})):e(n||"Ocurrió un error al eliminar el paciente")}catch{e("Ocurrió un error al eliminar el paciente")}finally{t(!1)}},pagina:l,totalPages:b,setPagina:E,agregarPaciente:async i=>{try{t(!0);const a=await O(r,i),{error:c,datos:n,mensaje:o,status:P}=a;return P===200?(e(o),s({type:d.SET_PACIENTE_NUEVO,payload:n}),!0):c?(e(c),!1):(e("Ocurrió un error al guardar el paciente"),!1)}catch{e("Ocurrió un error al guardar el paciente")}finally{t(!1)}},editarPaciente:async(i,a)=>{try{t(!0);const c=await $(r,i,a),{error:n,datos:o,mensaje:P,status:y}=c;return y===200?(e(P),s({type:d.SET_PACIENTE_NUEVO,payload:o}),!0):n?(e(n),!1):(e("Ocurrió un error al guardar el paciente"),!1)}catch{e("Ocurrió un error al guardar el paciente")}finally{t(!1)}},obtenerPacientePorId:async i=>{try{t(!0);const a=await A(r,i),{status:c,error:n,datos:o}=a;if(c===200)return s({type:d.SET_PACIENTE,payload:o}),o;e(n||"Ocurrió un error el obtener los datos del paciente")}catch{e("Ocurrió un error el obtener los datos del paciente")}finally{t(!1)}},obtenerPacientePorNombre:async i=>{try{t(!0);const a=await S(r,i),{status:c,error:n,datos:o}=a;if(c===200)return s({type:d.SET_PACIENTE,payload:o}),o;e(n||"Ocurrió un error el obtener los datos del paciente")}catch{e("Ocurrió un error el obtener los datos del paciente")}finally{t(!1)}},uploadPdf:async i=>{let a=new FormData;a.append("file",i);const{status:c,error:n,datos:o}=await I(r,a);return c===200?o:(e(n||"Ocurrió un error al subir el archivo"),!1)}}};export{R as a,w as u};
